;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name adzerk.boot-reload.client, :imports nil, :requires {adzerk.boot-reload.reload adzerk.boot-reload.reload, jsloader goog.net.jsloader, goog.net.jsloader goog.net.jsloader, ws adzerk.boot-reload.websocket, adzerk.boot-reload.websocket adzerk.boot-reload.websocket, rl adzerk.boot-reload.reload, net clojure.browser.net, clojure.browser.net clojure.browser.net, event clojure.browser.event, cljs.reader cljs.reader, reader cljs.reader, clojure.browser.event clojure.browser.event}, :uses nil, :defs {ws-conn {:name adzerk.boot-reload.client/ws-conn, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :line 10, :column 1, :end-line 10, :end-column 23, :private true, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :line 10, :column 16, :end-line 10, :end-column 23, :private true}}, alive? {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :line 12, :column 7, :end-line 12, :end-column 13, :arglists (quote ([]))}, :name adzerk.boot-reload.client/alive?, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, patch-goog-base! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :line 15, :column 7, :end-line 15, :end-column 23, :arglists (quote ([]))}, :name adzerk.boot-reload.client/patch-goog-base!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, connect {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :line 21, :column 7, :end-line 21, :end-column 14, :arglists (quote ([url & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [opts])], :arglists ([url & [opts]]), :arglists-meta (nil)}}, :name adzerk.boot-reload.client/connect, :variadic true, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/adzerk/boot_reload/client.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(url [opts])], :arglists ([url & [opts]]), :arglists-meta (nil)}, :method-params [(url [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists ([url & [opts]])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:closed :opened :error :message}, :order [:opened :message :closed :error]}, :doc nil}
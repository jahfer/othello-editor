;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros, have taoensso.encore, go-loop cljs.core.async.macros, have? taoensso.encore}, :excludes #{}, :name taoensso.sente, :imports nil, :requires {str clojure.string, clojure.string clojure.string, async cljs.core.async, cljs.core.async cljs.core.async, enc taoensso.encore, taoensso.encore taoensso.encore, interfaces taoensso.sente.interfaces, taoensso.sente.interfaces taoensso.sente.interfaces}, :uses {<! cljs.core.async, swap-in! taoensso.encore, warnf taoensso.encore, chan cljs.core.async, format taoensso.encore, swapped taoensso.encore, reset-in! taoensso.encore, debugf taoensso.encore, tracef taoensso.encore, infof taoensso.encore, >! cljs.core.async, errorf taoensso.encore, put! cljs.core.async}, :defs {assert-send-args {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 685, :column 8, :end-line 685, :end-column 24, :private true, :arglists (quote ([x ?timeout-ms ?cb]))}, :private true, :name taoensso.sente/assert-send-args, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 24, :method-params ([x ?timeout-ms ?cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x ?timeout-ms ?cb]))}, map->ChAjaxSocket {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 898, :column 12, :end-line 898, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__19206]))}, :name taoensso.sente/map->ChAjaxSocket, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 24, :method-params ([G__19206]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 898, :end-line 898, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19206]))}, as-event {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 145, :column 7, :end-line 145, :end-column 15, :arglists (quote ([x]))}, :name taoensso.sente/as-event, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chsk-send!* {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 672, :column 4, :end-line 672, :end-column 15, :protocol taoensso.sente/IChSocket, :doc "Implementation detail.", :arglists (quote ([chsk ev opts]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/chsk-send!*, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 15, :method-params ([chsk ev opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 672, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chsk ev opts])), :doc "Implementation detail."}, pack {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 235, :column 8, :end-line 235, :end-column 12, :private true, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :private true, :name taoensso.sente/pack, :variadic true, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, chsk-send! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 675, :column 7, :end-line 675, :end-column 17, :arglists (quote ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts])), :doc "Sends `[ev-id ev-?data :as event]`, returns true on apparent success.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists-meta (nil nil nil)}}, :name taoensso.sente/chsk-send!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :arglists-meta (nil nil nil)}, :method-params ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 675, :end-line 675, :max-fixed-arity 4, :fn-var true, :arglists ([chsk ev] [chsk ev ?timeout-ms ?cb] [chsk ev opts]), :doc "Sends `[ev-id ev-?data :as event]`, returns true on apparent success."}, validate-event {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 134, :column 8, :end-line 134, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.sente/validate-event, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, event? {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 143, :column 7, :end-line 143, :end-column 13, :arglists (quote ([x])), :doc "Valid [ev-id ?ev-data] form?"}, :name taoensso.sente/event?, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Valid [ev-id ?ev-data] form?"}, event-msg? {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 160, :column 7, :end-line 160, :end-column 17, :arglists (quote ([x]))}, :name taoensso.sente/event-msg?, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, make-channel-socket! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 1021, :column 7, :end-line 1021, :end-column 27, :arglists (quote ([path & & [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts]])), :doc "Returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n             ; May `put!` (inject) arbitrary `event`s to this channel.\n    :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n    :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n    :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n  Common options:\n    :type         ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto)\n    :ws-kalive-ms ; Ping to keep a WebSocket conn alive if no activity w/in given\n                  ; number of milliseconds\n    :lp-kalive-ms ; Ping to keep a long-polling (Ajax) conn alive ''\n    :chsk-url-fn  ; Please see `default-chsk-url-fn` for details\n    :packer       ; :edn (default), or an IPacker implementation (experimental)\n    :ajax-opts    ; Base opts map provided to `ajax-call`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(path [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts])], :arglists ([path & & [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts]]), :arglists-meta (nil)}}, :name taoensso.sente/make-channel-socket!, :variadic true, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(path [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts])], :arglists ([path & & [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts]]), :arglists-meta (nil)}, :method-params [(path [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1021, :end-line 1021, :max-fixed-arity 1, :fn-var true, :arglists ([path & & [{:keys [type recv-buf-or-n ws-kalive-ms lp-timeout-ms chsk-url-fn packer client-id ajax-opts], :as opts, :or {type :auto, recv-buf-or-n (async/sliding-buffer 2048), ws-kalive-ms 25000, lp-timeout-ms 25000, chsk-url-fn default-chsk-url-fn, packer :edn, client-id (or (:client-uuid opts) (enc/uuid-str))}} _deprecated-more-opts]]), :doc "Returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n             ; May `put!` (inject) arbitrary `event`s to this channel.\n    :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n    :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n    :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n  Common options:\n    :type         ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto)\n    :ws-kalive-ms ; Ping to keep a WebSocket conn alive if no activity w/in given\n                  ; number of milliseconds\n    :lp-kalive-ms ; Ping to keep a long-polling (Ajax) conn alive ''\n    :chsk-url-fn  ; Please see `default-chsk-url-fn` for details\n    :packer       ; :edn (default), or an IPacker implementation (experimental)\n    :ajax-opts    ; Base opts map provided to `ajax-call`"}, chsk-init! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 669, :column 4, :end-line 669, :end-column 14, :protocol taoensso.sente/IChSocket, :doc "Implementation detail.", :arglists (quote ([chsk]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/chsk-init!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 14, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 669, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc "Implementation detail."}, chsk-destroy! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 670, :column 4, :end-line 670, :end-column 17, :protocol taoensso.sente/IChSocket, :doc "Kills socket, stops auto-reconnects.", :arglists (quote ([chsk]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/chsk-destroy!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 17, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 670, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc "Kills socket, stops auto-reconnects."}, ->ChAjaxSocket {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 898, :column 12, :end-line 898, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([client-id url chs timeout-ms ajax-opts curr-xhr_ state_ packer]))}, :name taoensso.sente/->ChAjaxSocket, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 24, :method-params ([client-id url chs timeout-ms ajax-opts curr-xhr_ state_ packer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 898, :end-line 898, :max-fixed-arity 8, :fn-var true, :arglists (quote ([client-id url chs timeout-ms ajax-opts curr-xhr_ state_ packer]))}, ChAjaxSocket {:num-fields 8, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative taoensso.sente/IChSocket cljs.core/IMap cljs.core/ILookup}, :name taoensso.sente/ChAjaxSocket, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 24, :type true, :column 12, :internal-ctor true, :line 898, :record true, :end-line 898, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, set-logging-level! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 100, :column 7, :end-line 100, :end-column 25, :arglists (quote ([level]))}, :name taoensso.sente/set-logging-level!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 25, :method-params ([level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([level]))}, start-chsk-router! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 1138, :column 7, :end-line 1138, :end-column 25, :arglists (quote ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs?]}]])), :doc "Creates a go-loop to call `(event-msg-handler <event-msg>)` and returns a\n  `(fn stop! [])`. Catches & logs errors. Advanced users may choose to instead\n  write their own loop against `ch-recv`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs?]}])], :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs?]}]]), :arglists-meta (nil)}}, :name taoensso.sente/start-chsk-router!, :variadic true, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs?]}])], :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs?]}]]), :arglists-meta (nil)}, :method-params [(ch-recv event-msg-handler [{:as opts, :keys [trace-evs?]}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1138, :end-line 1138, :max-fixed-arity 2, :fn-var true, :arglists ([ch-recv event-msg-handler & [{:as opts, :keys [trace-evs?]}]]), :doc "Creates a go-loop to call `(event-msg-handler <event-msg>)` and returns a\n  `(fn stop! [])`. Catches & logs errors. Advanced users may choose to instead\n  write their own loop against `ch-recv`."}, pack* {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 223, :column 8, :end-line 223, :end-column 13, :private true, :arglists (quote ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid])), :doc "clj->prefixed-pstr", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists-meta (nil nil)}}, :private true, :name taoensso.sente/pack*, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :arglists-meta (nil nil)}, :method-params ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 4, :fn-var true, :arglists ([packer ?packer-meta clj] [packer ?packer-meta clj ?cb-uuid]), :doc "clj->prefixed-pstr"}, receive-buffered-evs! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 737, :column 8, :end-line 737, :end-column 29, :private true, :arglists (quote ([chs clj]))}, :private true, :name taoensso.sente/receive-buffered-evs!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 29, :method-params ([chs clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 737, :end-line 737, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chs clj]))}, unpack {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 240, :column 8, :end-line 240, :end-column 14, :private true, :arglists (quote ([packer prefixed-pstr])), :doc "prefixed-pstr->[clj ?cb-uuid]"}, :private true, :name taoensso.sente/unpack, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 14, :method-params ([packer prefixed-pstr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 2, :fn-var true, :arglists (quote ([packer prefixed-pstr])), :doc "prefixed-pstr->[clj ?cb-uuid]"}, default-chsk-url-fn {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 998, :column 6, :end-line 998, :end-column 25}, :name taoensso.sente/default-chsk-url-fn, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 25, :method-params ([path p__19238 websocket?]), :protocol-impl nil, :arglists-meta (), :column 1, :line 998, :end-line 998, :max-fixed-arity 3, :fn-var true, :arglists nil, :doc "(ƒ [path window-location websocket?]) -> server-side chsk route URL string.\n\n    * path       - As provided to client-side `make-channel-socket!` fn\n                   (usu. \"/chsk\").\n    * websocket? - True for WebSocket connections, false for Ajax (long-polling)\n                   connections.\n    * window-location - Map with keys:\n      :href     ; \"http://www.example.org:80/foo/bar?q=baz#bang\"\n      :protocol ; \"http:\" ; Note the :\n      :hostname ; \"example.org\"\n      :host     ; \"example.org:80\"\n      :pathname ; \"/foo/bar\"\n      :search   ; \"?q=baz\"\n      :hash     ; \"#bang\"\n\n  Note that the *same* URL is used for: WebSockets, POSTs, GETs. Server-side\n  routes should be configured accordingly."}, start-chsk-router-loop! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 1194, :column 7, :end-line 1194, :end-column 30, :arglists (quote ([event-handler ch-recv])), :doc "DEPRECATED: Please use `start-chsk-router!` instead."}, :name taoensso.sente/start-chsk-router-loop!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 30, :method-params ([event-handler ch-recv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1194, :end-line 1194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-handler ch-recv])), :doc "DEPRECATED: Please use `start-chsk-router!` instead."}, ajax-call {:name taoensso.sente/ajax-call, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 109, :column 1, :end-line 109, :end-column 15, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 109, :column 6, :end-line 109, :end-column 15}, :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-call \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, handle-when-handshake! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 745, :column 8, :end-line 745, :end-column 30, :private true, :arglists (quote ([chsk chs clj]))}, :private true, :name taoensso.sente/handle-when-handshake!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 30, :method-params ([chsk chs clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 745, :end-line 745, :max-fixed-arity 3, :fn-var true, :arglists (quote ([chsk chs clj]))}, ChWebSocket {:num-fields 11, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative taoensso.sente/IChSocket cljs.core/IMap cljs.core/ILookup}, :name taoensso.sente/ChWebSocket, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 23, :type true, :column 12, :internal-ctor true, :line 784, :record true, :end-line 784, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, pull-unused-cb-fn! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 695, :column 8, :end-line 695, :end-column 26, :private true, :arglists (quote ([cbs-waiting_ ?cb-uuid]))}, :private true, :name taoensso.sente/pull-unused-cb-fn!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 26, :method-params ([cbs-waiting_ ?cb-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 695, :end-line 695, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cbs-waiting_ ?cb-uuid]))}, assert-event {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 147, :column 7, :end-line 147, :end-column 19, :arglists (quote ([x]))}, :name taoensso.sente/assert-event, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chsk-reconnect! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 671, :column 4, :end-line 671, :end-column 19, :protocol taoensso.sente/IChSocket, :doc "Drops connection, allows auto-reconnect. Useful for reauthenticating after login/logout.", :arglists (quote ([chsk]))}, :protocol taoensso.sente/IChSocket, :name taoensso.sente/chsk-reconnect!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 19, :method-params ([chsk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 671, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chsk])), :doc "Drops connection, allows auto-reconnect. Useful for reauthenticating after login/logout."}, with-?meta {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 222, :column 8, :end-line 222, :end-column 18, :private true, :arglists (quote ([x ?m]))}, :private true, :name taoensso.sente/with-?meta, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 18, :method-params ([x ?m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ?m]))}, set-exp-backoff-timeout! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 780, :column 7, :end-line 780, :end-column 31, :arglists (quote ([nullary-f & [nattempt]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}}, :name taoensso.sente/set-exp-backoff-timeout!, :variadic true, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}, :method-params [(nullary-f [nattempt])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 1, :fn-var true, :arglists ([nullary-f & [nattempt]])}, cb-chan-as-fn {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 722, :column 8, :end-line 722, :end-column 21, :private true, :arglists (quote ([?cb ev])), :doc "Experimental, undocumented. Allows a core.async channel to be provided\n  instead of a cb-fn. The channel will receive values of form\n  [<event-id>.cb <reply>]."}, :private true, :name taoensso.sente/cb-chan-as-fn, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 21, :method-params ([?cb ev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 722, :end-line 722, :max-fixed-arity 2, :fn-var true, :arglists (quote ([?cb ev])), :doc "Experimental, undocumented. Allows a core.async channel to be provided\n  instead of a cb-fn. The channel will receive values of form\n  [<event-id>.cb <reply>]."}, IChSocket {:meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 668, :column 14, :end-line 668, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {chsk-init! [[chsk]], chsk-destroy! [[chsk]], chsk-reconnect! [[chsk]], chsk-send!* [[chsk ev opts]]}}}, :protocol-symbol true, :name taoensso.sente/IChSocket, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 23, :column 1, :line 668, :protocol-info {:methods {chsk-init! [[chsk]], chsk-destroy! [[chsk]], chsk-reconnect! [[chsk]], chsk-send!* [[chsk ev opts]]}}, :info nil, :end-line 668, :impls #{taoensso.sente/ChWebSocket taoensso.sente/ChAjaxSocket}, :doc nil, :jsdoc ("@interface")}, cb-success? {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 205, :column 7, :end-line 205, :end-column 18, :arglists (quote ([cb-reply-clj])), :doc "Note that cb reply need _not_ be `event` form!"}, :name taoensso.sente/cb-success?, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 18, :method-params ([cb-reply-clj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cb-reply-clj])), :doc "Note that cb reply need _not_ be `event` form!"}, ->ChWebSocket {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 784, :column 12, :end-line 784, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([client-id url chs socket_ kalive-ms kalive-timer_ kalive-due?_ nattempt_ cbs-waiting_ state_ packer]))}, :name taoensso.sente/->ChWebSocket, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 23, :method-params ([client-id url chs socket_ kalive-ms kalive-timer_ kalive-due?_ nattempt_ cbs-waiting_ state_ packer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 784, :end-line 784, :max-fixed-arity 11, :fn-var true, :arglists (quote ([client-id url chs socket_ kalive-ms kalive-timer_ kalive-due?_ nattempt_ cbs-waiting_ state_ packer]))}, map->ChWebSocket {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 784, :column 12, :end-line 784, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__19150]))}, :name taoensso.sente/map->ChWebSocket, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 23, :method-params ([G__19150]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 784, :end-line 784, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19150]))}, unpack* {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 213, :column 8, :end-line 213, :end-column 15, :private true, :arglists (quote ([packer pstr])), :doc "pstr->clj"}, :private true, :name taoensso.sente/unpack*, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 15, :method-params ([packer pstr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 2, :fn-var true, :arglists (quote ([packer pstr])), :doc "pstr->clj"}, merge>chsk-state! {:protocol-inline nil, :meta {:file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :line 701, :column 8, :end-line 701, :end-column 25, :private true, :arglists (quote ([{:keys [chs state_], :as chsk} merge-state]))}, :private true, :name taoensso.sente/merge>chsk-state!, :variadic false, :file "/Users/jahferh/.boot/cache/tmp/Users/jahferh/src/lang/clj/othello_editor/ix5/-dsx0fd/main.out/taoensso/sente.cljs", :end-column 25, :method-params ([p__19108 merge-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 701, :end-line 701, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [chs state_], :as chsk} merge-state]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, enc taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:curr-xhr_ :chsk/closed ?timeout-ms :ws-kalive-ms :flush? :cb :first-open? ajax-opts cbs-waiting_ :ws :get :lp-timeout-ms :chsk/recv vector? clj :client-uuid :handshake :ch-recv :malformed-event kalive-timer_ :requested-reconnect-pending? :client-id state_ timeout-ms :kalive-ms enc/nblank-str? :?content :else :protocol :wrong-id-type curr-xhr_ :_ :method :pathname :uid :nattempt_ :trace-evs? :packer :chs :chsk/ws-ping :swap/dissoc client-id :handshake? :params string? :recur :type kalive-ms :chsk/state :unnamespaced-id :state :ajax :chsk/bad-event :requested-reconnect? enc/chan? :non-handshake nattempt_ packer chs :internal :destroyed? or :chsk/error :host :event have? nil? :wrong-type :recv-buf-or-n type :socket_ :ppstr :id :open? :taoensso.sente/stop :edn :chsk-url-fn :url :lp-timeout :chsk/timeout :handled :?data :post :chsk ifn? :csrf-token :kalive-due?_ :send-fn taoensso.encore/nnil? :wrong-length :timeout enc/nneg-int? :resp-type :ajax-opts :cbs-waiting_ socket_ pstr ?cb :auto prefixed-pstr :kalive-timer_ url :timeout-ms :chsk/handshake :apparent-success :?error chsk and :state_ ?cb-fn :ajax-cb :chsk/dummy-cb-200 :<server :in kalive-due?_ :text}, :order [:wrong-type :wrong-length :else :wrong-id-type :unnamespaced-id :chsk/bad-event :malformed-event :ch-recv :state :event :id :?data :send-fn :chsk/closed :chsk/error :chsk/timeout pstr string? :ajax-cb prefixed-pstr :timeout-ms :cb or and nil? ?timeout-ms ?cb enc/nneg-int? ifn? enc/chan? :swap/dissoc :chs :state_ :requested-reconnect-pending? :open? :requested-reconnect? clj vector? :<server :chsk/handshake :handshake :non-handshake :uid :csrf-token :internal :handled :client-id :url :socket_ :kalive-ms :kalive-timer_ :kalive-due?_ :nattempt_ :cbs-waiting_ :packer :flush? ?cb-fn taoensso.encore/nnil? :recur :apparent-success :destroyed? :chsk/ws-ping client-id url chs socket_ kalive-ms kalive-timer_ kalive-due?_ nattempt_ cbs-waiting_ state_ packer :ajax-opts :curr-xhr_ :method :resp-type :params :post :text :_ :ppstr :?error :?content :timeout :chsk/dummy-cb-200 :get :handshake? timeout-ms ajax-opts curr-xhr_ :protocol :host :pathname :type :auto :recv-buf-or-n :ws-kalive-ms :lp-timeout-ms :chsk-url-fn :edn :client-uuid type :in :ws :ajax have? enc/nblank-str? :lp-timeout :first-open? :chsk/state :chsk/recv chsk :chsk :trace-evs? :taoensso.sente/stop]}, :doc "Channel sockets. Otherwise known as The Shiz.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping.\n    [2] Emulate with dummy-cb wrapping.\n    [3] Emulate with long-polling.\n\n  Abbreviations:\n    * chsk   - Channel socket. Sente's own pseudo \"socket\".\n    * net-ch - Network channel. Underlying web server's channel. Must implement\n               Sente's async net channel interface.\n    * uid    - User-id. An application-level user identifier used for async push.\n               May have semantic meaning (e.g. username, email address), or not\n               (e.g. client/random id) - app's discretion.\n    * cb     - Callback.\n    * tout   - Timeout.\n    * ws     - WebSocket/s.\n    * pstr   - Packed string. Arbitrary Clojure data serialized as a string (e.g.\n               edn) for client<->server comms.\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1],[2].\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error.\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data>]],\n        [:chsk/state <new-state>],\n        [:chsk/recv <[buffered-evs]>] ; server>user push\n\n    * Server-side events:\n        [:chsk/ws-ping],\n        [:chsk/bad-package <packed-str>],\n        [:chsk/bad-event   <chsk-event>],\n        [:chsk/uidport-open],\n        [:chsk/uidport-close].\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's strong\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility). In\n      any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability)."}